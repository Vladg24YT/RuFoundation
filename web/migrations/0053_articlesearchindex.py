# Generated by Django 5.1.4 on 2025-08-17 16:44

import auto_prefetch
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import django.db.models.manager
from django.contrib.postgres.operations import TrigramExtension
from django.db import migrations, models

class Migration(migrations.Migration):

    dependencies = [
        ('web', '0052_visualusergroup_badge_show_border'),
    ]

    operations = [
        TrigramExtension(),
        migrations.CreateModel(
            name='ArticleSearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_plaintext', models.TextField(verbose_name='Текст статьи')),
                ('content_source', models.TextField(verbose_name='Исходный код статьи')),
                ('vector_plaintext', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('article', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.article', verbose_name='Статья')),
            ],
            options={
                'verbose_name': 'Индекс для поиска по статьям',
                'verbose_name_plural': 'Индексы для поиска по статьям',
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
                'indexes': [models.Index(fields=['article'], name='web_article_article_5eb4fb_idx'), django.contrib.postgres.indexes.GinIndex(fields=['vector_plaintext'], name='web_article_vector__7954ea_gin'), django.contrib.postgres.indexes.GinIndex(fields=['content_plaintext'], name='article_search_plaintext_gin', opclasses=['gin_trgm_ops']), django.contrib.postgres.indexes.GinIndex(fields=['content_source'], name='article_search_source_gin', opclasses=['gin_trgm_ops'])],
                'constraints': [models.UniqueConstraint(fields=('article',), name='web_articlesearchindex_unique')],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        )
    ]
